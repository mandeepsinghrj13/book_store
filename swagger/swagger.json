{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "BookStoreApp",
        "description": "This app is created as a bookstore",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:4000",
    "basePath": "/",
    "tags": [],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/userRegistration": {
            "post": {
                "tags": ["BookStore"],
                "description": "User Register in Book Store",
                "parameters": [
                    {
                        "name": "User Register",
                        "in": "body",
                        "description": "User Registration",
                        "schema": { 
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "New user Registered"
                    },
                    "400": {
                        "description": "User already exist / Wrong Input Validations"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminRegistration": {
            "post": {
                "tags": ["BookStore"],
                "description": "Register Admin in Book Store",
                "parameters": [
                    {
                        "name": "Admin Register",
                        "in": "body",
                        "description": "Admin Registration",
                        "schema": { 
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "New admin user Registered"
                    },
                    "400": {
                        "description": "User already exist / Wrong Input Validations"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["Login"],
                "description": "Login user",
                "parameters": [
                    {
                        "name": "Login",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Not Found / Wrong Input Validations"
                    }
                }
            }
        },
        "/books": {
            "post": {
                "tags": [
                    "Add Books"
                ],
                "description": "Add book",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "Add Book",
                        "in": "body",
                        "description": "Book body",
                        "schema": {
                            "$ref": "#/definitions/books"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/books"
                },
                "responses": {
                    "201": {
                        "description": "Create note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getbooks": {
            "get": {
                "tags": [
                    "Get Books"
                ],
                "description": "Get a  book !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/books"
                },
                "responses": {
                    "201": {
                        "description": "get all ote succesfully !!"
                    },
                    "401": {
                        "description": "please enter valid token"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "tags": [
                    "Get Books"
                ],
                "description": "Get a book by ID for perticuler person id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of book you want to fetch",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/booksid"
                },
                "responses": {
                    "200": {
                        "description": "Book found succesfully"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/searchbook/{title}":{
            "get":{
              "tags":["search title"],
              "description":"search title",
              "parameters":[
                {
                  "in":"header",
                  "name":"authorization",
                  "description":"Token for validation",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                },
                {
                    "in": "path",
                    "name": "title",
                    "description": "search title"
                }
              ],
              "produces": [
                "application/json"
            ],
              "responses":{
                "200":{"description":"search by title successfully"},
                "500":{"description":"Internal server error"},
                "400":{"description":"not found book"}
              }
            }
        },
        "/updatebooks/{bookId}": {
            "put": {
                "tags": [
                    "update Books"
                ],
                "description": "update a book by ID for perticuler person id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "bookId",
                        "description": "Id of book you want to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "Note body",
                        "schema": {
                            "$ref": "#/definitions/updatebooks"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "update book succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/deletebooks/{id}": {
            "delete": {
                "tags": [
                    "Delete Books"
                ],
                "description": "Delete a book by ID for perticuler person id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of book you want to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Delete book succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/addToCart/{id}": {
            "post": {
                "tags": ["Add To Cart"],
                
                "description": "Add a book to the cart",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter token recieved in login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Enter id of the book",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Add Bok to the cart",
                        "in": "body",
                        "description": "Add to Cart",
                        "schema": { 
                            "$ref": "#/definitions/addToCart"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "Item added successfully"
                    },
                    "401":{
                        "description": "Unauthorized token"
                    },
                    "400": {
                        "description": "Error"
                    }
                }
            }
        },
        "/carts":{
            "get":{
              "tags":["get all carts"],
              "description":"Get all carts",
              "parameters":[
                {
                  "in":"header",
                "name":"authorization",
                "description":"Token for validation",
                "schema":{
                  "type":"string",
                  "required":true
                }
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"carts retrieved"},
                "500":{"description":"Couldnt retrieve carts"}
              }
            }
        },
        "/cart/{id}":{
            "get":{
              "tags":["get cart by id"],
              "description":"Gets cart by id",
              "parameters":[
                {
                  "in":"header",
                  "name":"authorization",
                  "description":"Token for validation",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                },
                {
                  "in":"path",
                  "name":"id",
                  "description":"User id",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"get cart by id successfully"},
                "500":{"description":"Internal server error"},
                "400":{"description":"unable to fetch cart"}
              }
            }
        },
        "/removeBookFromCart":{
            "delete":{
              "tags":["Delete Book into cart"],
              "description":"Delete a Book",
              "parameters":[{
                "in":"header",
                  "name":"authorization",
                  "description":"Token for validation",
                  "schema":{
                    "type":"string",
                    "required":true
                }
              },
              {
                "in":"body",
                "name":"cart",
                "description":"delete bookfromCart",
                  "schema":{"$ref":"#/definitions/removebook"}
                }],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"book removed from cart successfully"},
                "500":{"description":"Internal server error"},
                "400":{"description":"Invalid Token/unable to remove "}
              }
            }    
        }
    },
    "definitions": {
        "registerUser": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
                
            },
            "example": {
                "firstName":"example",
                "lastName":"example",
                "email":"example@gmail.com",
                "Password": "Example@1234"
            }
        }   ,
        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "example": {
                "email":"singh.mr.1996@gmail.com",
                "password": "Password@1234"
            }
        },
        "books": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "author": "author name",
                "quantity": "quantity of books",
                "price": "price of the book",
                "title": "title",
                "description": "description "
            }
        },
        "booksid": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "example": {
                "id": "1"
            }
        },
        "updatebooks": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "bookId": {
                    "type": "string"
                }
            },
            "example": {
                "author": "Write a author name",
                "title": "Write a title here.....",
                "quantity": 1,
                "price": 100, 
                "description": "Write a description here....."
            }
        }   ,
        "addToCart": {
            "type": "object",
            "properties": {
                "qty": {
                    "type": "number"
                }
            }
        },
        "removebook":{
            "type":"object",
            "properties":{
              "bookId":{
                "type":"string"
              }
            }
        } 
    }
}